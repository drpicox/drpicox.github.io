{"version":3,"sources":["webpack:///./wiki/ProjectsWithRelease.mdx","webpack:///./src/components/NavIndex.js","webpack:///./src/components/NavTopics.js","webpack:///./src/layouts/WikiLayout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","navCss","NavIndex","index","prev","next","css","className","to","NavTopics","replace","WikiPage","children","pageContext","frontmatter","title","BasicLayout","shared","Main"],"mappings":"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","file":"component---wiki-projects-with-release-mdx-762986980e73d0a2b2e9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Deck, Slide, ShowWhenPresenting } from \"../src/components/Deck\";\nimport DefaultLayout from \"/Volumes/Projects/drpicox/david-rodenas.com/src/layouts/WikiLayout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`This article covers how to release the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/drpicox/drpicox.github.io/new/master?filename=_entries/ProjectsWith.md\"\n      }}>{`[ProjectsWith]`}</a>{` project. It assumes that\nyou have already a Heroku account and a repository created.`}</p>\n    <Deck mdxType=\"Deck\"><Slide mdxType=\"Slide\">\n        <h2>{`When to Release`}</h2>\n        <p>{`The Release Manager has to make a release for each pull request approved by its\nreviewers.`}</p>\n      </Slide><Slide mdxType=\"Slide\">\n        <h2>{`Tools`}</h2>\n        <p>{`Deploy tools are built on top of `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.gnu.org/software/bash/\",\n            \"target\": \"_blank\",\n            \"rel\": \"nofollow noopener noreferrer\"\n          }}>{`BASH`}</a>{`.`}</p>\n        <ul>\n          <li parentName=\"ul\">{`If you are using UNIX (Linux or Mac) probably you are already using BASH.`}</li>\n          <li parentName=\"ul\">{`If you are using Windows, you probably have Git BASH installed.`}</li>\n        </ul>\n      </Slide><Slide mdxType=\"Slide\">\n        <h2>{`Release process`}</h2>\n      </Slide><Slide mdxType=\"Slide\">\n        <ShowWhenPresenting mdxType=\"ShowWhenPresenting\"><small>\n            <p>{`Release process`}</p>\n          </small></ShowWhenPresenting>\n        <h3>{`1. Test branch on your local`}</h3>\n        <ol>\n          <li parentName=\"ol\">{`Fetch changes from the GitHub repository`}</li>\n          <li parentName=\"ol\">{`Checkout the branch into your local`}</li>\n          <li parentName=\"ol\">{`Merge master into your local branch`}</li>\n          <li parentName=\"ol\">{`Run the tests:`}</li>\n        </ol>\n        <div {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"bash\"\n        }}><pre parentName=\"div\" {...{\n            \"className\": \"language-bash\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}><span parentName=\"code\" {...{\n                \"className\": \"token operator\"\n              }}>{`>`}</span>{` ./mvnw `}<span parentName=\"code\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`test`}</span>{`\n`}<span parentName=\"code\" {...{\n                \"className\": \"token operator\"\n              }}>{`>`}</span>{` `}<span parentName=\"code\" {...{\n                \"className\": \"token function\"\n              }}>{`yarn`}</span>{` `}<span parentName=\"code\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`test`}</span></code></pre></div>\n      </Slide><Slide mdxType=\"Slide\">\n        <ShowWhenPresenting mdxType=\"ShowWhenPresenting\"><small>\n            <p>{`Release process`}</p>\n          </small></ShowWhenPresenting>\n        <h3>{`If 1. Fails`}</h3>\n        <ul>\n          <li parentName=\"ul\">{`Return to your working branch.`}</li>\n          <li parentName=\"ul\">{`Delete your feature master branch.`}</li>\n          <li parentName=\"ul\">{`Notify through the PR the problem.`}</li>\n        </ul>\n      </Slide><Slide mdxType=\"Slide\">\n        <ShowWhenPresenting mdxType=\"ShowWhenPresenting\"><small>\n            <p>{`Release process`}</p>\n          </small></ShowWhenPresenting>\n        <h3>{`2. Merge branch into GirHub master`}</h3>\n        <p>{`If all tests passes locally, go to GitHub, look for the PullResquest and click\nMerge to master.`}</p>\n        <blockquote>\n          <blockquote parentName=\"blockquote\">\n            <p parentName=\"blockquote\">{`Make sure that it says merge to master.`}</p>\n          </blockquote>\n        </blockquote>\n      </Slide><Slide mdxType=\"Slide\">\n        <ShowWhenPresenting mdxType=\"ShowWhenPresenting\"><small>\n            <p>{`Release process`}</p>\n          </small></ShowWhenPresenting>\n        <h3>{`3. Deploy the project on Heroku`}</h3>\n        <ol>\n          <li parentName=\"ol\">{`Fetch changes from the GitHub repository`}</li>\n          <li parentName=\"ol\">{`Change to the master branch`}</li>\n          <li parentName=\"ol\">{`Pull changes from master`}</li>\n          <li parentName=\"ol\">{`Run the deplou script:`}</li>\n        </ol>\n        <div {...{\n          \"className\": \"gatsby-highlight\",\n          \"data-language\": \"bash\"\n        }}><pre parentName=\"div\" {...{\n            \"className\": \"language-bash\"\n          }}><code parentName=\"pre\" {...{\n              \"className\": \"language-bash\"\n            }}><span parentName=\"code\" {...{\n                \"className\": \"token operator\"\n              }}>{`>`}</span>{` ./deploy.sh`}</code></pre></div>\n      </Slide><Slide mdxType=\"Slide\">\n        <ShowWhenPresenting mdxType=\"ShowWhenPresenting\"><small>\n            <p>{`Release process`}</p>\n          </small></ShowWhenPresenting>\n        <h3>{`4. Cleanup`}</h3>\n        <p>{`Return to your working branch and:`}</p>\n        <ol>\n          <li parentName=\"ol\">{`Delete the old already deployed feature branch`}</li>\n          <li parentName=\"ol\">{`Delete your local master branch`}</li>\n        </ol>\n      </Slide><Slide mdxType=\"Slide\">\n        <h2>{`Some final notes`}</h2>\n        <p>{`Make sure that all tests passes from command line. If they doesn't, the bot will\nassume that you have failed in your task.`}</p>\n\n      </Slide></Deck>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"../shared\";\n\nconst navCss = css`\n  margin-bottom: -4.5em;\n\n  .prev {\n    margin-right: 0.3em;\n  }\n  .next {\n    margin-left: 0.3em;\n  }\n`;\n\nexport function NavIndex({ index, prev, next }) {\n  return (\n    <>\n      {index && (\n        <div css={navCss}>\n          {prev && (\n            <Link className=\"prev\" to={`/${prev}`}>\n              «\n            </Link>\n          )}\n          <Link className=\"index\" to={`/${index}`}>\n            {index}\n          </Link>\n          {next && (\n            <Link className=\"next\" to={`/${next}`}>\n              »\n            </Link>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"../shared\";\n\nconst navCss = css`\n  display: grid;\n  grid-template-areas: \"prev index next\";\n  grid-gap: 0.5em;\n\n  .prev {\n    grid-area: prev;\n    text-align: left;\n  }\n  .next {\n    grid-area: next;\n    text-align: right;\n  }\n  .index {\n    grid-area: index;\n    text-align: center;\n  }\n`;\n\nexport function NavTopics({ prev, next, index }) {\n  if (index === prev)\n    return (\n      <div css={navCss}>\n        {index && (\n          <Link className=\"prev\" to={`/${index}`}>\n            ← Index\n          </Link>\n        )}\n        {next && (\n          <Link className=\"next\" to={`/${next}`}>\n            {next.replace(index, \"\")} →\n          </Link>\n        )}\n      </div>\n    );\n\n  return (\n    <div css={navCss}>\n      {index && (\n        <Link className=\"index\" to={`/${index}`}>\n          {index}\n        </Link>\n      )}\n      {prev && (\n        <Link className=\"prev\" to={`/${prev}`}>\n          ← {prev.replace(index, \"\")}\n        </Link>\n      )}\n      {next && (\n        <Link className=\"next\" to={`/${next}`}>\n          {next.replace(index, \"\")} →\n        </Link>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Main from \"../components/Main\";\nimport { NavIndex } from \"../components/NavIndex\";\nimport { NavTopics } from \"../components/NavTopics\";\nimport * as shared from \"../shared\";\nimport BasicLayout from \"./BasicLayout\";\n\nexport default function WikiPage({ children, pageContext }) {\n  const { title, index, prev, next } = pageContext.frontmatter;\n  return (\n    <BasicLayout title={title}>\n      <MDXProvider components={shared}>\n        <Main>\n          <shared.Container>\n            <NavIndex index={index} prev={prev} next={next} />\n            {title && <h1>{title}</h1>}\n            {children}\n            <NavTopics index={index} prev={prev} next={next} />\n          </shared.Container>\n        </Main>\n      </MDXProvider>\n    </BasicLayout>\n  );\n}\n"],"sourceRoot":""}
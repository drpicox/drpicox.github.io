{"version":3,"sources":["webpack:///./src/components/NavIndex.js","webpack:///./src/components/NavTopics.js","webpack:///./src/layouts/WikiLayout.js","webpack:///./wiki/Testing.mdx"],"names":["navCss","NavIndex","index","css","className","to","NavTopics","prev","next","replace","WikiPage","children","pageContext","frontmatter","title","BasicLayout","components","shared","Main","name","_frontmatter","Link","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","lang","dir","href","isMDXComponent"],"mappings":"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","file":"component---wiki-testing-mdx-bed7e7d77373ae195c8f.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"../shared\";\n\nconst navCss = css`\n  margin-bottom: -4.5em;\n`;\n\nexport function NavIndex({ index }) {\n  return (\n    <>\n      {index && (\n        <div css={navCss}>\n          <Link className=\"index\" to={`/${index}`}>\n            {index}\n          </Link>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"../shared\";\n\nconst navCss = css`\n  display: grid;\n  grid-template-areas: \"prev index next\";\n  grid-gap: 0.5em;\n\n  .prev {\n    grid-area: prev;\n    text-align: left;\n  }\n  .next {\n    grid-area: next;\n    text-align: right;\n  }\n  .index {\n    grid-area: index;\n    text-align: center;\n  }\n`;\n\nexport function NavTopics({ prev, next, index }) {\n  if (index === prev)\n    return (\n      <div css={navCss}>\n        {index && (\n          <Link className=\"prev\" to={`/${index}`}>\n            ← Index\n          </Link>\n        )}\n        {next && (\n          <Link className=\"next\" to={`/${next}`}>\n            {next.replace(index, \"\")} →\n          </Link>\n        )}\n      </div>\n    );\n\n  return (\n    <div css={navCss}>\n      {index && (\n        <Link className=\"index\" to={`/${index}`}>\n          {index}\n        </Link>\n      )}\n      {prev && (\n        <Link className=\"prev\" to={`/${prev}`}>\n          ← {prev.replace(index, \"\")}\n        </Link>\n      )}\n      {next && (\n        <Link className=\"next\" to={`/${next}`}>\n          {next.replace(index, \"\")} →\n        </Link>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Main from \"../components/Main\";\nimport { NavIndex } from \"../components/NavIndex\";\nimport { NavTopics } from \"../components/NavTopics\";\nimport * as shared from \"../shared\";\nimport BasicLayout from \"./BasicLayout\";\n\nexport default function WikiPage({ children, pageContext }) {\n  const { title, index, prev, next } = pageContext.frontmatter;\n  return (\n    <BasicLayout title={title}>\n      <MDXProvider components={shared}>\n        <Main>\n          <shared.Container>\n            <NavIndex index={index} />\n            {title && <h1>{title}</h1>}\n            {children}\n            <NavTopics index={index} prev={prev} next={next} />\n          </shared.Container>\n        </Main>\n      </MDXProvider>\n    </BasicLayout>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Volumes/Projects/drpicox/gatsby-home/src/layouts/WikiLayout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"><Link to=\"/NoOwnership\" mdxType=\"Link\">[NoOwnership]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/TestingGuessTheRule\" mdxType=\"Link\">[TestingGuessTheRule]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/BowlingGameKata\" mdxType=\"Link\">[BowlingGameKata]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/TheThreeRulesOfTDD\" mdxType=\"Link\">[TheThreeRulesOfTDD]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/TheThreeStagesOfTDD\" mdxType=\"Link\">[TheThreeStagesOfTDD]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/StairstepTest\" mdxType=\"Link\">[StairstepTest]</Link></li>\n    </ul>\n    <p>{`Testing is amazing.\nI cannot figure out how I was able to sleep comfortably before Testing.\nI was great coding, I loved to do `}<Link to=\"/DefensiveProgramming\" mdxType=\"Link\">[DefensiveProgramming]</Link>{`,\nI was proud of my work, but once I understood Testing,\nI realized that I was not a fraction as good as I am today.`}</p>\n    <p>{`I was a great detractor of Testing.\nI was reading a lot of Testing, I thought that\nI learned a lot about it, but almost everything was\ncontradictory or did not make sense.\nBut one day I realized that it was not my fault,\nneither fault of Testing: almost every\nHow to Test on the internet at that time was awful.\nLuckily it has changed.`}</p>\n    <p>{`If you have to start Testing today I have some advice:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Learning to test is not hard`}</strong>{`.\nIf you know programming and debugging you already know testing.\nMake the code work for you.\n`}<a parentName=\"p\" {...{\n            \"href\": \"/blog/2020/03/06/everyone-knows-how-to-do-great-testing.html\"\n          }}>{`Everyone knows how to do great testing`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Testing is your best documentation`}</strong>{`.\nTests should be easy to understand and ready to copy-paste.\nThey have to explain which functionalities your code has, and how to use them. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Write about functionalities, not functions`}</strong>{`.\nDo not let the word Unit deceive you: you are not testing methods,\nclasses, or modules. You are testing functionalities.\nWrite a test for each possible case, and later,\nin its section, exceptional cases, exception, and regression tests.`}</p>\n        <blockquote className=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">«Write tests. Not too many. Mostly integration.»<br /><span className=\"small\">&mdash; Guillermo Rauch ▲ (@rauchg) <a href=\"https://twitter.com/rauchg/status/807626710350839808?ref_src=twsrc%5Etfw\">December 10, 2016</a></span></p></blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Never test `}<em parentName=\"strong\">{`private`}</em>{` representations`}</strong>{`.\nNever. You are testing how to use it; if you use internal structures,\nyou will not be able to refactor.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Refactor and refactor your test until it is easy to understand`}</strong>{`.\nDo it in green and as many times as you need.\nDo not be afraid of creating auxiliary code, structures,\nand artifacts to simplify your Testing. Readability and maintainability are key.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Get rid of mocks`}</strong>{`.\nThe only mocks that you need are for the real user, random, time, and external services.\nMocks destroy the confidence in tests and make future refactors harder. `}</p>\n        <blockquote className=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">«The more your tests resemble the way your software is used, the more confidence they can give you.»<br /><span className=\"small\">&mdash; Kent C. Dodds 🧢 (@kentcdodds) <a href=\"https://twitter.com/kentcdodds/status/977018512689455106?ref_src=twsrc%5Etfw\">March 23, 2018</a></span></p></blockquote>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
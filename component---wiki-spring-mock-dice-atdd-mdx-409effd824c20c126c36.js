(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{WHYo:function(e,a,t){"use strict";t.d(a,"a",(function(){return l}));var n=t("q1tI"),c=t.n(n),s=t("7ljp"),o=t("eC7B"),b=t("qKvR"),p=t("8rN0");var m={name:"1dj59mw",styles:"margin-bottom:-4.5em;.prev{margin-right:0.3em;}.next{margin-left:0.3em;}"};function j(e){var a=e.index,t=e.prev,n=e.next;return Object(b.a)(c.a.Fragment,null,a&&Object(b.a)("div",{css:m},t&&Object(b.a)(p.Link,{className:"prev",to:"/"+t},"«"),Object(b.a)(p.Link,{className:"index",to:"/"+a},a),n&&Object(b.a)(p.Link,{className:"next",to:"/"+n},"»")))}var O={name:"ix6qzk",styles:'display:grid;grid-template-areas:"prev index next";grid-gap:0.5em;.prev{grid-area:prev;text-align:left;}.next{grid-area:next;text-align:right;}.index{grid-area:index;text-align:center;}'};function N(e){var a=e.prev,t=e.next,n=e.index;return n===a?Object(b.a)("div",{css:O},n&&Object(b.a)(p.Link,{className:"prev",to:"/"+n},"← Index"),t&&Object(b.a)(p.Link,{className:"next",to:"/"+t},t.replace(n,"")," →")):Object(b.a)("div",{css:O},n&&Object(b.a)(p.Link,{className:"index",to:"/"+n},n),a&&Object(b.a)(p.Link,{className:"prev",to:"/"+a},"← ",a.replace(n,"")),t&&Object(b.a)(p.Link,{className:"next",to:"/"+t},t.replace(n,"")," →"))}var r=t("m8Tn");function l(e){var a=e.children,t=e.pageContext.frontmatter,n=t.title,c=t.index,m=t.prev,O=t.next;return Object(b.a)(r.a,{title:n},Object(b.a)(s.a,{components:p},Object(b.a)(o.a,null,Object(b.a)(p.Container,null,Object(b.a)(j,{index:c,prev:m,next:O}),n&&Object(b.a)("h1",null,n),a,Object(b.a)(N,{index:c,prev:m,next:O})))))}},xrsX:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return p})),t.d(a,"default",(function(){return N}));var n,c=t("wx14"),s=t("zLVn"),o=(t("q1tI"),t("7ljp")),b=t("WHYo"),p=(t("qKvR"),{}),m=(n="Mermaid",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",e)}),j={_frontmatter:p},O=b.a;function N(e){var a=e.components,t=Object(s.a)(e,["components"]);return Object(o.b)(O,Object(c.a)({},j,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"How to mock a dice with Spring for testing and ATDD?"),Object(o.b)("h3",null,"Overview"),Object(o.b)(m,{mdxType:"Mermaid"},"classDiagram\n    class UnsafeDice {\n        +int roll()\n    }\n    class LuckGame {\n        +bool play()\n    }\n    UnsafeDice <-- LuckGame : dice\n    class DiceMock {\n        +int roll()\n        +void mockRoll(value)\n    }\n    UnsafeDice <|-- DiceMock\n    class DiceTestConfiguration {\n        <<Configuration>>\n        +UnsafeDice unsafeDice()\n    }\n    DiceMock <-- DiceTestConfiguration : diceMock\n    class DiceResultStep {\n        <<Component>>\n        +void getRegex()\n        +void run(line, match)\n    }\n    class ShouldWinGameStep {\n        <<Component>>\n        +void getRegex()\n        +void run(line, match)\n    }\n    class ShouldLooseGameStep {\n        <<Component>>\n        +void getRegex()\n        +void run(line, match)\n    }\n    DiceResultStep <|-- AbstractPostLineStep\n    ShouldWinGameStep <|-- AbstractPostLineStep\n    ShouldLooseGameStep <|-- AbstractPostLineStep\n    LuckGame <-- ShouldLooseGameStep : luckGame\n    LuckGame <-- ShouldWinGameStep : luckGame\n    DiceMock <-- DiceResultStep : diceMock\n"),Object(o.b)("h3",null,"The Dice"),Object(o.b)("p",null,"First you need a dice:"),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"package")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"game"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"java",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"util",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Random"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"stereotype",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Service"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Service"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"UnsafeDice")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Random")," random ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"new")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Random"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"int")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"roll"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," random",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"nextInt"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"6"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("h3",null,"The DiceMock"),Object(o.b)("p",null,"Now, inside the ",Object(o.b)("code",Object(c.a)({parentName:"p"},{className:"language-text"}),"test")," directory, we need to add a mock for the dice."),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"package")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"game",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"mocks"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"java",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"util",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"List"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"java",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"util",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LinkedList"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"stereotype",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Service"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"game",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Dice"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Service"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceMock")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"extends")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"UnsafeDice")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"List"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token generics"}),Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"<"),Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token class-name"}),"Integer"),Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),">"))," values ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"new")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LinkedList"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token generics"}),Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"<"),Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token class-name"}),"Integer"),Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),">")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"int")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"roll"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"if")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),"values",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"isEmpty"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"6"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," values",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"remove"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"void")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"mockRoll"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"int")," value",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        valorsRandom",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"add"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),"value",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("p",null,"Please note that this mock does not return random elements, but elements that\ncan be added with mockRoll."),Object(o.b)("h3",null,"The DiceMock spring configuration"),Object(o.b)("p",null,"Configure Spring so it returns the mock instead of the original dice when\ncomponents injects them."),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"package")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"game",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"mocks"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"game",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Dice"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"context",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"annotation",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Bean"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"context",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"annotation",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Configuration"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"context",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"annotation",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Primary"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"context",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"annotation",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Profile"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Profile"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"test"'),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Configuration"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceTestConfiguration")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceMock")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceTestConfiguration"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceMock")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"this"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),"diceMock ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Bean"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Primary"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"UnsafeDice")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"unsafeDice"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("h3",null,"Use from code"),Object(o.b)("p",null,"There is no change in the conventional code. Just use the dice as always."),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"package")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"game"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token namespace"}),"org",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"springframework",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),"."),"stereotype",Object(o.b)("span",Object(c.a)({parentName:"span"},{className:"token punctuation"}),".")),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Service"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Service"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LuckGame")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"UnsafeDice")," unsafeDice",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LuckGame"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"UnsafeDice")," unsafeDice",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"this"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),"unsafeDice ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," unsafeDice",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"boolean")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"play"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," unsafeDice",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"roll"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"<=")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"2"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("h3",null,"Use from test"),Object(o.b)("p",null,"You can inject either ",Object(o.b)("em",{parentName:"p"},"UnsafeDice")," or ",Object(o.b)("em",{parentName:"p"},"DiceMock")," in your test, but both will be\nthe same instance: the mock."),Object(o.b)("p",null,"The post should look like this:"),Object(o.b)("div",{className:"gatsby-highlight","data-language":"text"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-text"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-text"}),"  * Given that the dice result will be 1\n  * I should win the game\n  * Given that the dice result will be 2\n  * I should win the game\n  * Given that the dice result will be 3\n  * I should loose the game"))),Object(o.b)("p",null,"And the steps:"),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Component"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceResult")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"extends")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"AbstractPostLineStep")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"final")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceMock")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"ItShouldBeNotDockedStep"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"DiceMock")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"this"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),"diceMock ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"protected")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"String")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"getRegex"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"dice result will be (\\\\d)"'),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"protected")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"void")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"run"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"PostLine")," line",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"String"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]")," match",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"var")," result ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"Integer"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"parseInt"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),"match",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token number"}),"1"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n        diceMock",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"mockRoll"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),"result",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"ShouldWinGameStep")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"extends")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"AbstractPostLineStep")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"final")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LuckGame")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"ShouldWinGameStep"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LuckGame")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"this"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),"luckGame ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"protected")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"String")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"getRegex"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"should win the game"'),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"protected")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"void")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"run"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"PostLine")," line",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"String"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]")," match",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"var")," result ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"play"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"assertThat"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),"result",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"isEqualTo"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("div",{className:"gatsby-highlight","data-language":"java"},Object(o.b)("pre",Object(c.a)({parentName:"div"},{className:"language-java"}),Object(o.b)("code",Object(c.a)({parentName:"pre"},{className:"language-java"}),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"class")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"ShouldLooseGameStep")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"extends")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"AbstractPostLineStep")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"private")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"final")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LuckGame")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"public")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"ShouldWinGameStep"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"LuckGame")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"this"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),"luckGame ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"protected")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"String")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"getRegex"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token string"}),'"should win the game"'),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token annotation punctuation"}),"@Override"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"protected")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"void")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"run"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"PostLine")," line",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token class-name"}),"String"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]")," match",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token keyword"}),"var")," result ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," luckGame",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"play"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n        ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"assertThat"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),"result",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token function"}),"isEqualTo"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"false"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(o.b)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(o.b)("h3",null,"What happens?"),Object(o.b)("p",null,"The behaviour of the code is the following:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"During production the dice is a real dice. Each time that the game is played,\nit rolls the UnsafeDice at was programmed.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"During the testing stage, the dice is a mock. The game does not contains an\ninstance of the dice, but the mock which is injected by Spring."))))}N.isMDXComponent=!0}}]);
//# sourceMappingURL=component---wiki-spring-mock-dice-atdd-mdx-409effd824c20c126c36.js.map
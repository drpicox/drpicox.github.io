{"version":3,"sources":["webpack:///./src/layouts/WikiLayout.js","webpack:///./wiki/Testing.mdx"],"names":["WikiPage","children","title","pageContext","frontmatter","components","shared","name","_frontmatter","Link","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","to","className","lang","dir","href","isMDXComponent"],"mappings":"4FAAA,4GAMe,SAASA,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,SACzBC,EADkD,EAAfC,YACbC,YAAtBF,MACR,OACE,YAAC,IAAD,CAAaA,MAAOA,GAClB,YAAC,IAAD,CAAaG,WAAYC,GACvB,YAAC,IAAD,KACE,YAAC,YAAD,KACGJ,GAAS,sBAAKA,GACdD,Q,kICNSM,E,4DAFTC,G,UAAe,IAOtBC,GALgBF,EAKK,OALG,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDX,EAEC,EAFDA,WACGK,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCL,WAAYA,EAAYY,QAAQ,cAG5E,sBACE,kBAAIC,WAAW,MAAK,YAACT,EAAD,CAAMU,GAAG,eAAeF,QAAQ,QAAhC,kBACpB,kBAAIC,WAAW,MAAK,YAACT,EAAD,CAAMU,GAAG,uBAAuBF,QAAQ,QAAxC,0BACpB,kBAAIC,WAAW,MAAK,YAACT,EAAD,CAAMU,GAAG,mBAAmBF,QAAQ,QAApC,sBACpB,kBAAIC,WAAW,MAAK,YAACT,EAAD,CAAMU,GAAG,sBAAsBF,QAAQ,QAAvC,yBACpB,kBAAIC,WAAW,MAAK,YAACT,EAAD,CAAMU,GAAG,uBAAuBF,QAAQ,QAAxC,0BACpB,kBAAIC,WAAW,MAAK,YAACT,EAAD,CAAMU,GAAG,iBAAiBF,QAAQ,QAAlC,qBAEtB,wJAEgC,YAACR,EAAD,CAAMU,GAAG,wBAAwBF,QAAQ,QAAzC,0BAFhC,0HAKA,+WAQA,+EACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,gCAAnB,oGAGN,6BAAGA,WAAW,KAAQ,CACZ,KAAQ,iEADlB,0CAHM,MAOF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,sCAAnB,oJAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,8CAAnB,sPAKA,0BAAYE,UAAU,iBAAgB,iBAAGC,KAAK,KAAKC,IAAI,OAAjB,mDAAuE,uBAAM,oBAAMF,UAAU,SAAhB,iCAA4D,iBAAGG,KAAK,4EAAR,yBAEjL,kBAAIL,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,cAAsC,kBAAIA,WAAW,UAAf,WAAtC,oBAAnB,gHAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,kEAAnB,iMAKF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,oBAAnB,yKAGA,0BAAYE,UAAU,iBAAgB,iBAAGC,KAAK,KAAKC,IAAI,OAAjB,uGAA2H,uBAAM,oBAAMF,UAAU,SAAhB,oCAA+D,iBAAGG,KAAK,gFAAR,wBAO9OP,EAAWQ,gBAAiB","file":"component---wiki-testing-mdx-d158b0cf8f6ecf9761df.js","sourcesContent":["import React from \"react\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport Main from \"../components/Main\"\nimport * as shared from \"../shared\"\nimport BasicLayout from \"./BasicLayout\"\n\nexport default function WikiPage({ children, pageContext }) {\n  const { title } = pageContext.frontmatter\n  return (\n    <BasicLayout title={title}>\n      <MDXProvider components={shared}>\n        <Main>\n          <shared.Container>\n            {title && <h1>{title}</h1>}\n            {children}\n          </shared.Container>\n        </Main>\n      </MDXProvider>\n    </BasicLayout>\n  )\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Volumes/Projects/drpicox/gatsby-home/src/layouts/WikiLayout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"><Link to=\"/NoOwnership\" mdxType=\"Link\">[NoOwnership]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/TestingGuessTheRule\" mdxType=\"Link\">[TestingGuessTheRule]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/BowlingGameKata\" mdxType=\"Link\">[BowlingGameKata]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/TheThreeRulesOfTDD\" mdxType=\"Link\">[TheThreeRulesOfTDD]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/TheThreeStagesOfTDD\" mdxType=\"Link\">[TheThreeStagesOfTDD]</Link></li>\n      <li parentName=\"ul\"><Link to=\"/StairstepTest\" mdxType=\"Link\">[StairstepTest]</Link></li>\n    </ul>\n    <p>{`Testing is amazing.\nI cannot figure out how I was able to sleep comfortably before Testing.\nI was great coding, I loved to do `}<Link to=\"/DefensiveProgramming\" mdxType=\"Link\">[DefensiveProgramming]</Link>{`,\nI was proud of my work, but once I understood Testing,\nI realized that I was not a fraction as good as I am today.`}</p>\n    <p>{`I was a great detractor of Testing.\nI was reading a lot of Testing, I thought that\nI learned a lot about it, but almost everything was\ncontradictory or did not make sense.\nBut one day I realized that it was not my fault,\nneither fault of Testing: almost every\nHow to Test on the internet at that time was awful.\nLuckily it has changed.`}</p>\n    <p>{`If you have to start Testing today I have some advice:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Learning to test is not hard`}</strong>{`.\nIf you know programming and debugging you already know testing.\nMake the code work for you.\n`}<a parentName=\"p\" {...{\n            \"href\": \"/blog/2020/03/06/everyone-knows-how-to-do-great-testing.html\"\n          }}>{`Everyone knows how to do great testing`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Testing is your best documentation`}</strong>{`.\nTests should be easy to understand and ready to copy-paste.\nThey have to explain which functionalities your code has, and how to use them. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Write about functionalities, not functions`}</strong>{`.\nDo not let the word Unit deceive you: you are not testing methods,\nclasses, or modules. You are testing functionalities.\nWrite a test for each possible case, and later,\nin its section, exceptional cases, exception, and regression tests.`}</p>\n        <blockquote className=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Â«Write tests. Not too many. Mostly integration.Â»<br /><span className=\"small\">&mdash; Guillermo Rauch â–² (@rauchg) <a href=\"https://twitter.com/rauchg/status/807626710350839808?ref_src=twsrc%5Etfw\">December 10, 2016</a></span></p></blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Never test `}<em parentName=\"strong\">{`private`}</em>{` representations`}</strong>{`.\nNever. You are testing how to use it; if you use internal structures,\nyou will not be able to refactor.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Refactor and refactor your test until it is easy to understand`}</strong>{`.\nDo it in green and as many times as you need.\nDo not be afraid of creating auxiliary code, structures,\nand artifacts to simplify your Testing. Readability and maintainability are key.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Get rid of mocks`}</strong>{`.\nThe only mocks that you need are for the real user, random, time, and external services.\nMocks destroy the confidence in tests and make future refactors harder. `}</p>\n        <blockquote className=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Â«The more your tests resemble the way your software is used, the more confidence they can give you.Â»<br /><span className=\"small\">&mdash; Kent C. Dodds ðŸ§¢ (@kentcdodds) <a href=\"https://twitter.com/kentcdodds/status/977018512689455106?ref_src=twsrc%5Etfw\">March 23, 2018</a></span></p></blockquote>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{"8W56":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return i}));var b,l=a("wx14"),n=a("zLVn"),c=(a("q1tI"),a("7ljp")),o=a("4xnX"),r=a("WHYo"),s=(a("qKvR"),{}),p=(b="Link",function(e){return console.warn("Component "+b+" was not imported, exported, or provided by MDXProvider as global scope"),Object(c.b)("div",e)}),u={_frontmatter:s},j=r.a;function i(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)(j,Object(l.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This article covers how to release the ",Object(c.b)(p,{to:"/TcLs2",mdxType:"Link"},"[TcLs2]")," project.\nIt assumes that you have already a Heroku account and a repository created. "),Object(c.b)(o.a,{mdxType:"Deck"},Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)("h2",null,"When to Release"),Object(c.b)("p",null,"The Release Manager has to make a release for\neach pull request approved by its reviewers.")),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)("h2",null,"Tools"),Object(c.b)("p",null,"Deploy tools are built on top of ",Object(c.b)("a",Object(l.a)({parentName:"p"},{href:"https://www.gnu.org/software/bash/",target:"_blank",rel:"nofollow noopener noreferrer"}),"BASH"),"."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"If you are using UNIX (Linux or Mac) probably you are already using BASH."),Object(c.b)("li",{parentName:"ul"},"If you are using Windows, you probably have Git BASH installed."))),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)("h2",null,"Release process")),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)(o.b,{mdxType:"ShowWhenPresenting"},Object(c.b)("small",null,Object(c.b)("p",null,"Release process"))),Object(c.b)("h3",null,"1. Test branch on your local"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Fetch changes from the GitHub repository")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Checkout the branch into your local")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Merge master into your local branch")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Run the tests:"),Object(c.b)("div",Object(l.a)({parentName:"li"},{className:"gatsby-highlight","data-language":"bash"}),Object(c.b)("pre",Object(l.a)({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",Object(l.a)({parentName:"code"},{className:"token operator"}),">")," ./mvnw ",Object(c.b)("span",Object(l.a)({parentName:"code"},{className:"token builtin class-name"}),"test"),"\n",Object(c.b)("span",Object(l.a)({parentName:"code"},{className:"token operator"}),">")," ",Object(c.b)("span",Object(l.a)({parentName:"code"},{className:"token function"}),"yarn")," ",Object(c.b)("span",Object(l.a)({parentName:"code"},{className:"token builtin class-name"}),"test"))))))),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)(o.b,{mdxType:"ShowWhenPresenting"},Object(c.b)("small",null,Object(c.b)("p",null,"Release process"))),Object(c.b)("h3",null,"If 1. Fails"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Return to your working branch."),Object(c.b)("li",{parentName:"ul"},"Delete your feature master branch."),Object(c.b)("li",{parentName:"ul"},"Notify through the PR the problem."))),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)(o.b,{mdxType:"ShowWhenPresenting"},Object(c.b)("small",null,Object(c.b)("p",null,"Release process"))),Object(c.b)("h3",null,"2. Merge branch into GirHub master"),Object(c.b)("p",null,"If all tests passes locally,\ngo to GitHub, look for the PullResquest\nand click Merge to master."),Object(c.b)("blockquote",null,Object(c.b)("blockquote",{parentName:"blockquote"},Object(c.b)("p",{parentName:"blockquote"},"Make sure that it says merge to master.")))),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)(o.b,{mdxType:"ShowWhenPresenting"},Object(c.b)("small",null,Object(c.b)("p",null,"Release process"))),Object(c.b)("h3",null,"3. Deploy the project on Heroku"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Fetch changes from the GitHub repository")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Change to the master branch")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Pull changes from master")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Run the deplou script:"),Object(c.b)("div",Object(l.a)({parentName:"li"},{className:"gatsby-highlight","data-language":"bash"}),Object(c.b)("pre",Object(l.a)({parentName:"div"},{className:"language-bash"}),Object(c.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),Object(c.b)("span",Object(l.a)({parentName:"code"},{className:"token operator"}),">")," ./deploy.sh")))))),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)(o.b,{mdxType:"ShowWhenPresenting"},Object(c.b)("small",null,Object(c.b)("p",null,"Release process"))),Object(c.b)("h3",null,"4. Cleanup"),Object(c.b)("p",null,"Return to your working branch and:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Delete the old already deployed feature branch"),Object(c.b)("li",{parentName:"ol"},"Delete your local master branch"))),Object(c.b)(o.c,{mdxType:"Slide"},Object(c.b)("h2",null,"Some final notes"),Object(c.b)("p",null,"Make sure that all tests passes from command line.\nIf they doesn't, the bot will assume that you have failed in your task."))))}i.isMDXComponent=!0},WHYo:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));a("q1tI");var b=a("7ljp"),l=a("eC7B"),n=a("8rN0"),c=a("m8Tn"),o=a("qKvR");function r(e){var t=e.children,a=e.pageContext.frontmatter.title;return Object(o.a)(c.a,{title:a},Object(o.a)(b.a,{components:n},Object(o.a)(l.a,null,Object(o.a)(n.Container,null,a&&Object(o.a)("h1",null,a),t))))}}}]);
//# sourceMappingURL=component---wiki-tc-ls-2-release-mdx-7ed494fbac475156c6e5.js.map
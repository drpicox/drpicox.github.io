{"version":3,"sources":["webpack:///./wiki/NoOwnership.mdx","webpack:///./src/components/NavIndex.js","webpack:///./src/components/NavTopics.js","webpack:///./src/layouts/WikiLayout.js"],"names":["name","_frontmatter","Link","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","isMDXComponent","navCss","NavIndex","index","prev","next","css","className","NavTopics","replace","WikiPage","children","pageContext","frontmatter","title","BasicLayout","shared","Main"],"mappings":"8LAUsBA,E,4DAFTC,G,UAAe,IAOtBC,GALgBF,EAKK,OALG,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,+LAGA,qTAMA,8BACE,iBAAGC,WAAW,cAAd,kCAEF,qbAOA,kDACA,8BACE,iBAAGA,WAAW,cAAd,iFAEF,sSAKA,qbASA,yKAEA,gPAIA,4BAAW,YAACV,EAAD,CAAMW,GAAG,WAAWF,QAAQ,QAA5B,eAKfF,EAAWK,gBAAiB,G,6ICvE5B,IAAMC,EAAM,mGAWL,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACtC,OACE,8BACGF,GACC,mBAAKG,IAAKL,GACPG,GACC,YAAC,OAAD,CAAMG,UAAU,OAAOR,GAAE,IAAMK,GAA/B,KAIF,YAAC,OAAD,CAAMG,UAAU,QAAQR,GAAE,IAAMI,GAC7BA,GAEFE,GACC,YAAC,OAAD,CAAME,UAAU,OAAOR,GAAE,IAAMM,GAA/B,OCzBZ,IAAMJ,EAAM,mNAmBL,SAASO,EAAT,GAA2C,IAAtBJ,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMF,EAAS,EAATA,MACtC,OAAIA,IAAUC,EAEV,mBAAKE,IAAKL,GACPE,GACC,YAAC,OAAD,CAAMI,UAAU,OAAOR,GAAE,IAAMI,GAA/B,WAIDE,GACC,YAAC,OAAD,CAAME,UAAU,OAAOR,GAAE,IAAMM,GAC5BA,EAAKI,QAAQN,EAAO,IADvB,OAQN,mBAAKG,IAAKL,GACPE,GACC,YAAC,OAAD,CAAMI,UAAU,QAAQR,GAAE,IAAMI,GAC7BA,GAGJC,GACC,YAAC,OAAD,CAAMG,UAAU,OAAOR,GAAE,IAAMK,GAA/B,KACKA,EAAKK,QAAQN,EAAO,KAG1BE,GACC,YAAC,OAAD,CAAME,UAAU,OAAOR,GAAE,IAAMM,GAC5BA,EAAKI,QAAQN,EAAO,IADvB,O,gBC7CO,SAASO,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,SAAyB,IAAfC,YACMC,YAAzCC,EADkD,EAClDA,MAAOX,EAD2C,EAC3CA,MAAOC,EADoC,EACpCA,KAAMC,EAD8B,EAC9BA,KAC5B,OACE,YAACU,EAAA,EAAD,CAAaD,MAAOA,GAClB,YAAC,IAAD,CAAalB,WAAYoB,GACvB,YAACC,EAAA,EAAD,KACE,YAACD,EAAA,UAAD,KACE,YAACd,EAAD,CAAUC,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA,IACzCS,GAAS,sBAAKA,GACdH,EACD,YAACH,EAAD,CAAWL,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA","file":"component---wiki-no-ownership-mdx-d612026488132b663599.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Volumes/Projects/drpicox/gatsby-home/src/layouts/WikiLayout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`There is a concept called \"ownership\" on code.\nIt states that given a repository, package, or class,\nthere is one owner responsible for updating and maintaining it.`}</p>\n    <p>{`This concept is wrong.\nThe individual ownership, an individual or a group,\nis contrary to Agile principles.\nAgile assumes the collective ownership.\nNo one owns the code; it belongs to the whole team involved in the project.\nAny member can alter or improve any module at any time.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The \"ownership\" is expensive.`}</p>\n    </blockquote>\n    <p>{`All owners are busy; they have they own blacklog to develop.\nFrequently happens that to implement one new feature in one module,\nit requires a change in another module of a different owner.\nThe problem is that the other owner is busy.\nThen the feature stalls until someone is able to update the other module.\nThis problem produces lots of overheads, delays,\nand the detriment of the cost/opportunity radio.`}</p>\n    <p>{`But the question is, why?`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Why people stick to ownerships when it is expensie and Agile discourages it?`}</p>\n    </blockquote>\n    <p>{`The problem is insecurity.\nNo one wants another developer messing with his code and breaking functionalities.\nNo one wants to touch an unknown module and risk to break features.\nA kind of agreement appears in which both parts conform\nto follow individual ownership.`}</p>\n    <p>{`There is a solution.\nThe solution is Testing.\nIf we create a set of tests coherent, complete, and sound,\nthe insecurity disappears.\nIt not possible anymore to introduce bugs silently;\nit is not possible to break things.\nIf someone adds a new feature to the code that I usually contribute,\nthere is no problem; I will not break that feature.\nThese kinds of tests are the ones that appear from TDD and BDD.`}</p>\n    <p>{`It is not a surprise that Testing is the solution to the Ownership problem.\nAgile was born assuming technical excellence and excellent Testing.`}</p>\n    <p>{`So from now on, remember, there is no ownership, just collective ownership.\nAnd it requires good Testing.\nThe kind of Testing that also reduces the cost of your project in the long term.\nIt is a win-win scenario.`}</p>\n    <p>{`See `}<Link to=\"/Testing\" mdxType=\"Link\">[Testing]</Link></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"../shared\";\n\nconst navCss = css`\n  margin-bottom: -4.5em;\n\n  .prev {\n    margin-right: 0.3em;\n  }\n  .next {\n    margin-left: 0.3em;\n  }\n`;\n\nexport function NavIndex({ index, prev, next }) {\n  return (\n    <>\n      {index && (\n        <div css={navCss}>\n          {prev && (\n            <Link className=\"prev\" to={`/${prev}`}>\n              «\n            </Link>\n          )}\n          <Link className=\"index\" to={`/${index}`}>\n            {index}\n          </Link>\n          {next && (\n            <Link className=\"next\" to={`/${next}`}>\n              »\n            </Link>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"../shared\";\n\nconst navCss = css`\n  display: grid;\n  grid-template-areas: \"prev index next\";\n  grid-gap: 0.5em;\n\n  .prev {\n    grid-area: prev;\n    text-align: left;\n  }\n  .next {\n    grid-area: next;\n    text-align: right;\n  }\n  .index {\n    grid-area: index;\n    text-align: center;\n  }\n`;\n\nexport function NavTopics({ prev, next, index }) {\n  if (index === prev)\n    return (\n      <div css={navCss}>\n        {index && (\n          <Link className=\"prev\" to={`/${index}`}>\n            ← Index\n          </Link>\n        )}\n        {next && (\n          <Link className=\"next\" to={`/${next}`}>\n            {next.replace(index, \"\")} →\n          </Link>\n        )}\n      </div>\n    );\n\n  return (\n    <div css={navCss}>\n      {index && (\n        <Link className=\"index\" to={`/${index}`}>\n          {index}\n        </Link>\n      )}\n      {prev && (\n        <Link className=\"prev\" to={`/${prev}`}>\n          ← {prev.replace(index, \"\")}\n        </Link>\n      )}\n      {next && (\n        <Link className=\"next\" to={`/${next}`}>\n          {next.replace(index, \"\")} →\n        </Link>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Main from \"../components/Main\";\nimport { NavIndex } from \"../components/NavIndex\";\nimport { NavTopics } from \"../components/NavTopics\";\nimport * as shared from \"../shared\";\nimport BasicLayout from \"./BasicLayout\";\n\nexport default function WikiPage({ children, pageContext }) {\n  const { title, index, prev, next } = pageContext.frontmatter;\n  return (\n    <BasicLayout title={title}>\n      <MDXProvider components={shared}>\n        <Main>\n          <shared.Container>\n            <NavIndex index={index} prev={prev} next={next} />\n            {title && <h1>{title}</h1>}\n            {children}\n            <NavTopics index={index} prev={prev} next={next} />\n          </shared.Container>\n        </Main>\n      </MDXProvider>\n    </BasicLayout>\n  );\n}\n"],"sourceRoot":""}
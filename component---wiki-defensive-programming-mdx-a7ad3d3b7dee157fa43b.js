(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{wxSF:function(e,a,n){"use strict";n.r(a),n.d(a,"_frontmatter",(function(){return r})),n.d(a,"default",(function(){return i}));n("E5k/"),n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("q1tI");var t=n("7ljp"),s=n("WHYo");n("qKvR");function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}var c,r={},p=(c="Link",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),Object(t.b)("div",e)}),m={_frontmatter:r},b=s.a;function i(e){var a=e.components,n=function(e,a){if(null==e)return{};var n,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,["components"]);return Object(t.b)(b,o({},m,n,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,Object(t.b)("em",{parentName:"p"},"Defensive programming is a technique that consists of anticipating possible\npoints of failure of usage of your code and write the code in the way that\neither it is impossible to misuse it or to fail as fast as possible.")),Object(t.b)("h3",null,"Example"),Object(t.b)("p",null,"This is a example of factorial with defensive programming."),Object(t.b)("div",{className:"gatsby-highlight","data-language":"javascript"},Object(t.b)("pre",o({parentName:"div"},{className:"language-javascript"}),Object(t.b)("code",o({parentName:"pre"},{className:"language-javascript"}),Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"function")," ",Object(t.b)("span",o({parentName:"code"},{className:"token function"}),"factorial"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token parameter"}),"n"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token comment"}),"// defensives ifs"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"typeof")," n ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),"!==")," ",Object(t.b)("span",o({parentName:"code"},{className:"token string"}),"'number'"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"new")," ",Object(t.b)("span",o({parentName:"code"},{className:"token class-name"}),"Error"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token string"}),"'Illegal argument: expected a number'"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"n ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),"<")," ",Object(t.b)("span",o({parentName:"code"},{className:"token number"}),"0"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")")," \n        ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"new")," ",Object(t.b)("span",o({parentName:"code"},{className:"token class-name"}),"Error"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token string"}),"'Illegal argument: expected a positive number'"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"Math",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"."),Object(t.b)("span",o({parentName:"code"},{className:"token function"}),"floor"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"n",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),"!==")," n",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"new")," ",Object(t.b)("span",o({parentName:"code"},{className:"token class-name"}),"Error"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token string"}),"'Illegal argument: expected a valid integer, no decimal'"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"arguments",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"."),"length ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),">")," ",Object(t.b)("span",o({parentName:"code"},{className:"token number"}),"1"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"new")," ",Object(t.b)("span",o({parentName:"code"},{className:"token class-name"}),"Error"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token string"}),"'Illegal arguments: factorial has only one argument'"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"n ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),">")," ",Object(t.b)("span",o({parentName:"code"},{className:"token constant"}),"MAX_SAFE_FACTORIAL_INPUT"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"new")," ",Object(t.b)("span",o({parentName:"code"},{className:"token class-name"}),"Error"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),Object(t.b)("span",o({parentName:"code"},{className:"token string"}),"'Illegal argument: the specified number is too big and the result overflows'"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token comment"}),"// factorial implementation"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"if")," ",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"n ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),"===")," ",Object(t.b)("span",o({parentName:"code"},{className:"token number"}),"0"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")")," ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"return")," ",Object(t.b)("span",o({parentName:"code"},{className:"token number"}),"1"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(t.b)("span",o({parentName:"code"},{className:"token keyword"}),"return")," n ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),"*")," ",Object(t.b)("span",o({parentName:"code"},{className:"token function"}),"factorial"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"("),"n ",Object(t.b)("span",o({parentName:"code"},{className:"token operator"}),"-")," ",Object(t.b)("span",o({parentName:"code"},{className:"token number"}),"1"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),")"),Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(t.b)("span",o({parentName:"code"},{className:"token punctuation"}),"}")))),Object(t.b)("h3",null,"Defensive programming failure"),Object(t.b)("p",null,"The problem of defensive programming is that you end quickly in the path\nof the overengineering. It is straightforward to anticipate tens, hundreds,\nor infinite, illegal cases, but almost impossible to cover all of them."),Object(t.b)("p",null,"The continuous act of anticipation and adding cases it has two significant\nproblems: it complicates the initial creation of code,\nand it makes a rigid system hard to change.\nThe first is easy to understand; you have to add tons of tests and checks.\nThe second is more subtle, and it is the main reason\nwhy I stopped using defensive programming.\nDefensive programming is checking for almost everything that you do;\nas a consecuence, it restricts the ways of usage.\nOne improvement may undo and reconstruct lots of defenses."),Object(t.b)("h3",null,"Alternative"),Object(t.b)("p",null,"It is ",Object(t.b)(p,{to:"/Testing",mdxType:"Link"},"[Testing]"),". It is more reliable and has better results."),Object(t.b)("p",null,"Note that in testing, ",Object(t.b)("code",o({parentName:"p"},{className:"language-text"}),"null")," is a valid ",Object(t.b)("a",o({parentName:"p"},{href:"https://github.com/drpicox/drpicox.github.io/new/master?filename=_entries/TestingDoubles.md"}),"[TestingDoubles]"),".\nThrowing a null error when an argument is not used,\nmakes the construction of the test more difficult and their understanding."),Object(t.b)("h3",null,"¿When to use defensive programming?"),Object(t.b)("p",null,"You may consider defensive programming when interacting with external actors.\nIf you are writing a library or an API, be sure to check all possible usages\nand fail fast when usages are illegal. If you are interacting with the user,\ndo not trust them, and add the required code to avoid unexpected inputs."))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---wiki-defensive-programming-mdx-a7ad3d3b7dee157fa43b.js.map
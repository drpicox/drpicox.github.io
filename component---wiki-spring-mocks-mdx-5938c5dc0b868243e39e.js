(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{481:function(n,t,e){"use strict";e.r(t),e.d(t,"_frontmatter",(function(){return a})),e.d(t,"default",(function(){return l}));e(39),e(8),e(7),e(2),e(16),e(1),e(0);var o=e(96),r=e(468);function c(){return(c=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])}return n}).apply(this,arguments)}var i,a={},p=(i="Link",function(n){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",n)}),u={_frontmatter:a},b=r.a;function l(n){var t=n.components,e=function(n,t){if(null==n)return{};var e,o,r={},c=Object.keys(n);for(o=0;o<c.length;o++)e=c[o],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,["components"]);return Object(o.b)(b,c({},u,e,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You cannot test with random or date.\nYou have to mock it to return predictable values in tests."),Object(o.b)("p",null,"Some examples: "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)(p,{to:"/SpringMockDice",mdxType:"Link"},"[SpringMockDice]")),Object(o.b)("li",{parentName:"ul"},Object(o.b)(p,{to:"/SpringMockTimer",mdxType:"Link"},"[SpringMockTimer]"))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---wiki-spring-mocks-mdx-5938c5dc0b868243e39e.js.map
{
  "drpx-id": {
    "title": "drpx-id: reference your children",
    "subtitle": "Improve connection between your Angular directives",
    "tags": [
      "angular",
      "modules"
    ],
    "date": "2015-04-25T00:00:00.000Z",
    "abstract": "Angular lets you to reference your parent controllers with require in directive definition, but does not have support to reference children. Here I present a small module that leverages in John Papa styleguide which allows parents to access children components in similar fashion that Angular 2.0 does.\n",
    "append": "/drpx-id/README.md",
    "hideTitle": true,
    "basename": "drpx-id",
    "preview": " ."
  },
  "first-ngtags-app": {
    "title": "First ngtags App",
    "subtitle": "Demo case with public source of ngtags",
    "tags": [
      "ngtags",
      "angular",
      "apps"
    ],
    "date": "2015-02-05T00:00:00.000Z",
    "basename": "first-ngtags-app",
    "preview": " [Ngtags](http://ngtags.org) objective is to simplify the creation of [AngularJS](https://angularjs.org) apps. Instead of creating complex _directive_ and _routes_ structure definitions it allows to create them through an `html` like tags self explained and contained."
  },
  "grunt-frontmatter": {
    "title": "grunt-frontmatter: extracting yaml",
    "subtitle": "Automatize metadata extraction in your Grunt process",
    "tags": [
      "grunt",
      "yaml",
      "front-matter"
    ],
    "date": "2015-02-09T00:00:00.000Z",
    "basename": "grunt-frontmatter",
    "preview": " Here I present a new grunt task (yep, another grunt task), the idea of these task is to extract YAML front-matter from files and put them all into one single JSON file.  For long time I have been using [grunt-markdown-to-json](https://www.npmjs.com/package/grunt-markdown-to-json) in my developments (two examples: one was this web page, another is [Wenode](http://wenode.barcelonajs.org))."
  },
  "updateable": {
    "title": "Updateable pattern or flux-for-angular",
    "subtitle": "Clean and safe method to keep computed values up to date",
    "tags": [
      "angular",
      "flux",
      "patterns"
    ],
    "date": "2015-03-02T00:00:00.000Z",
    "preview": "This last year Flux had become highly popular, but how it can be applied to Angular? Here I present an alternative mechanism more in line with Angular philosophy.\n",
    "basename": "updateable"
  }
}
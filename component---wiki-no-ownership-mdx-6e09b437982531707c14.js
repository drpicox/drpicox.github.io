(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"+PB5":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return u}));var o,i=n("wx14"),s=n("zLVn"),r=(n("q1tI"),n("7ljp")),a=n("WHYo"),l=(n("qKvR"),{}),c=(o="Link",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",e)}),p={_frontmatter:l},h=a.a;function u(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(r.b)(h,Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,'There is a concept called "ownership" on code. It states that given a repository, package, or class, there is one owner responsible for updating and maintaining it.'),Object(r.b)("p",null,"This concept is wrong. The individual ownership, an individual or a group, is contrary to Agile principles. Agile assumes the collective ownership. No one owns the code; it belongs to the whole team involved in the project. Any member can alter or improve any module at any time. "),Object(r.b)("p",null,'This concept of "ownership" is costly. All owners are busy; they are developing on their packages and their functionalities continuously. Frequently happens that to implement one new feature in one module, it requires a change in another module of a different owner. The problem is that usually the later is busy. When this happens, the first owner stalls until the other can allocate time to make the change. This problem produces lots of overheads, delays, and the detriment of the cost/opportunity radio.'),Object(r.b)("p",null,"But the question is, why? Why people stick to ownerships when they are wrong according to Agile and expensive?"),Object(r.b)("p",null,"The problem is insecurity. No one wants another developer messing with his code and breaking functionalities. No one wants to touch an unknown module and risk to break features. And a kind of agreement appears in which both parts conform to follow individual ownership."),Object(r.b)("p",null,"There is a solution. The solution is Testing. If we create a set of tests coherent, complete, and sound, the insecurity disappears. It not possible anymore to introduce bugs silently; it is not possible to break things. If someone adds a new feature to the code that I usually contribute, there is no problem; I will not break that feature. These kinds of tests are the ones that appear from TDD and BDD."),Object(r.b)("p",null,"It is not a surprise that Testing is the solution to the Ownership problem. Agile was born assuming technical excellence and excellent Testing."),Object(r.b)("p",null,"So from now on, remember, there is no ownership, just collective ownership. And it requires good Testing. The kind of Testing that also reduces the cost of your project in the long term. It is a win-win scenario."),Object(r.b)("p",null,"See ",Object(r.b)(c,{to:"/Testing",mdxType:"Link"},"[Testing]")))}u.isMDXComponent=!0},WHYo:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));n("q1tI");var o=n("7ljp"),i=n("eC7B"),s=n("8rN0"),r=n("m8Tn"),a=n("qKvR");function l(e){var t=e.children,n=e.pageContext.frontmatter.title;return Object(a.a)(r.a,{title:n},Object(a.a)(o.a,{components:s},Object(a.a)(i.a,null,Object(a.a)(s.Container,null,n&&Object(a.a)("h1",null,n),t))))}}}]);
//# sourceMappingURL=component---wiki-no-ownership-mdx-6e09b437982531707c14.js.map
(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{493:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return l}));n(39),n(8),n(7),n(2),n(16),n(1),n(0);var a=n(96),o=n(468);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var s={},i={_frontmatter:s},c=o.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(c,r({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Testing is amazing.\nI cannot figure out how I was able to sleep comfortably before Testing.\nI was great coding, I loved to do ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/drpicox/drpicox.github.io/new/master?filename=_entries/DefensiveCoding.md"}),"[DefensiveCoding]"),",\nI was proud of my work, but once I understood Testing,\nI realized that I was not a fraction as good as I am today."),Object(a.b)("p",null,"I was a great detractor of Testing.\nI was reading a lot of Testing, I thought that\nI learned a lot about it, but almost everything was\ncontradictory or did not make sense.\nBut one day I realized that it was not my fault,\nneither fault of Testing: almost every\nHow to Test on the internet at that time was awful.\nLuckily it has changed."),Object(a.b)("p",null,"If you have to start Testing today I have some advice:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Learning to test properly is as complicated as learing programming"),".\nIt is a new skill that you have to learn.\nBut it is worthy; once you mastered Testing,\nyou will be faster (and safer) with tests that without them.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Testing is your best documentation"),".\nTests should be easy to understand and ready to copy-paste.\nThey have to explain which functionalities your code has, and how to use them. ")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Write about functionalities, not functions"),".\nDo not let the word Unit deceive you: you are not testing methods,\nclasses, or modules. You are testing functionalities.\nWrite a test for each possible case, and later,\nin its section, exceptional cases, exception, and regression tests."),Object(a.b)("blockquote",{className:"twitter-tweet"},Object(a.b)("p",{lang:"en",dir:"ltr"},"Â«Write tests. Not too many. Mostly integration.Â»",Object(a.b)("br",null),Object(a.b)("span",{className:"small"},"â€” Guillermo Rauch â–² (@rauchg) ",Object(a.b)("a",{href:"https://twitter.com/rauchg/status/807626710350839808?ref_src=twsrc%5Etfw"},"December 10, 2016"))))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Never test ",Object(a.b)("em",{parentName:"strong"},"private")," representations"),".\nNever. You are testing how to use it; if you use internal structures,\nyou will not be able to refactor.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Refactor and refactor your test until it is easy to understand"),".\nDo it in green and as many times as you need.\nDo not be afraid of creating auxiliary code, structures,\nand artifacts to simplify your Testing. Readability and maintainability are key.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Get rid of mocks"),".\nThe only mocks that you need are for the real user, random, time, and external services.\nMocks destroy the confidence in tests and make future refactors harder. "),Object(a.b)("blockquote",{className:"twitter-tweet"},Object(a.b)("p",{lang:"en",dir:"ltr"},"Â«The more your tests resemble the way your software is used, the more confidence they can give you.Â»",Object(a.b)("br",null),Object(a.b)("span",{className:"small"},"â€” Kent C. Dodds ðŸ§¢ (@kentcdodds) ",Object(a.b)("a",{href:"https://twitter.com/kentcdodds/status/977018512689455106?ref_src=twsrc%5Etfw"},"March 23, 2018")))))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---wiki-testing-mdx-bb42155093f2a6eb8fae.js.map